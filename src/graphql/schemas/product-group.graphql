type ProductGroup implements Node {
  id: ID!
  productGroupName: String!
  companyName: String!
  createdAt: Date!
  updatedAt: Date!
  productOptionGroups: [ProductOptionGroup!]!
}

type ProductGroupEdge {
  node: ProductGroup!
}

type ProductGroupConnection {
  totalCount: Int!
  edges: [ProductGroupEdge!]!
}

type Query {
  productGroups(pagination: PaginationInput!): ProductGroupConnection!
  productGroup(productGroupId: ID!): ProductGroup
}

input CreateProductGroupInput {
  productGroupName: String!
  companyName: String!
}

type ProductGroupResultSuccess {
  productGroup: ProductGroup!
}

type CreateProductGroupInvalidInputError implements ErrorType {
  message: String!
}

union CreateProductGroupPayload = ProductGroupResultSuccess | CreateProductGroupInvalidInputError

type Mutation {
  createProductGroup(input: CreateProductGroupInput!): CreateProductGroupPayload!
}